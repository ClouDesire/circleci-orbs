---
description: >
  Command to run and test a docker container
parameters:
  container_name:
    type: string
    default: ""
  container_port_range:
    type: string
    default: "8080:8080"
  container_env_vars_file:
    type: string
    default: "./docker_env_file.list"
  container_check_url:
    type: string
    default: http://localhost:8080/actuator/health
  container_check_sleep_time:
    type: integer
    default: 60
  docker_registry:
    type: string
    default: docker.io
  docker_cmd_additional_options:
    type: string
    default: ""
steps:
  - run:
      name: Execute container
      environment:
        CONTAINER_ENV_VARS_FILE: "<<parameters.container_env_vars_file>>"
        CONTAINER_NAME: <<parameters.container_name>>
        CONTAINER_PORT_RANGE: "<<parameters.container_port_range>>"
        DOCKER_CMD_OPTIONS: <<parameters.docker_cmd_additional_options>>
        DOCKER_REGISTRY: <<parameters.docker_registry>>
      command: |
        if [ -f "${CONTAINER_ENV_VARS_FILE}" ]; then
          DOCKER_CMD_OPTIONS="$DOCKER_CMD_OPTIONS --env-file ${CONTAINER_ENV_VARS_FILE}"
        fi

        if [ "${CONTAINER_NAME}" == "" ]; then
          CONTAINER_NAME="$CIRCLE_PROJECT_REPONAME"
        fi
        echo "Container name: ${CONTAINER_NAME}"
        echo "Container port range: ${CONTAINER_PORT_RANGE}"
        echo "Docker options: ${DOCKER_CMD_OPTIONS}"
        echo "Container registry: ${DOCKER_REGISTRY}/${CONTAINER_NAME}"
        docker run -d --name "${CONTAINER_NAME}" -p "${CONTAINER_PORT_RANGE}" ${DOCKER_CMD_OPTIONS} "${DOCKER_REGISTRY}/${CONTAINER_NAME}"

  - run:
      name: Wait startup
      environment:
        CONTAINER_CHECK_URL: <<parameters.container_check_url>>
        CONTAINER_CHECK_SLEEP_TIME: << parameters.container_check_sleep_time>>
      command: |
        for i in $(seq 1 30); do
          if [ $i -gt 1 ] && sleep ${CONTAINER_CHECK_SLEEP_TIME}; then
            curl -sSf "${CONTAINER_CHECK_URL}" && s=0 && break || s=$?;
          fi
        done;
        exit $s
  - run:
      name: Print container logs
      when: on_fail
      enviroment:
        CONTAINER_NAME: <<parameters.container_name>>
      command: |
        if [ "${CONTAINER_NAME}" == "" ]; then
          CONTAINER_NAME="$CIRCLE_PROJECT_REPONAME"
        fi

        docker logs $CONTAINER_NAME
