---
description: >
  Command to run and test a docker container
parameters:
  container_name:
    type: string
    default: ""
  container_port_range:
    type: string
    default: "8080:8080"
  container_env_vars_file:
    type: string
    default: "./docker_env_file.list"
  container_check_url:
    type: string
    default: http://localhost:8080/actuator/health
  container_check_sleep_time:
    type: integer
    default: 1
  container_check_retries:
    type: integer
    default: 60
  docker_registry:
    type: string
    default: docker.io
  docker_cmd_additional_options:
    type: string
    default: ""
steps:
  - run:
      name: Execute container
      environment:
        CONTAINER_ENV_VARS_FILE: "<<parameters.container_env_vars_file>>"
        CONTAINER_NAME: <<parameters.container_name>>
        CONTAINER_PORT_RANGE: "<<parameters.container_port_range>>"
        DOCKER_CMD_OPTIONS: <<parameters.docker_cmd_additional_options>>
        DOCKER_REGISTRY: <<parameters.docker_registry>>
      command: <<include(scripts/docker_run.sh)>>

  - run:
      name: Wait startup
      environment:
        CHECK_URL: <<parameters.container_check_url>>
        CHECK_RETRIES: << parameters.container_check_retries >>
        CONTAINER_NAME: <<parameters.container_name>>
        SLEEP_TIME: << parameters.container_check_sleep_time>>
      command: <<include(scripts/utility_check_url.sh)>>

  - run:
      name: Print container logs
      when: on_fail
      enviroment:
        CONTAINER_NAME: <<parameters.container_name>>
      command: |
        if [ "${CONTAINER_NAME}" == "" ]; then
          CONTAINER_NAME="$CIRCLE_PROJECT_REPONAME"
        fi

        docker logs $CONTAINER_NAME
